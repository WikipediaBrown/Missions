# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "Send Missions to AppStore."
  lane :release_to_appstore do
    build_for_apple_distribution(configuration: "AppStore")
    # precheck
    # create_screenshots
    
    deliver(
      automatic_release: true,
      force: true,
      overwrite_screenshots: true,
      reject_if_possible: true,
      run_precheck_before_submit: false,
      screenshots_path: "./docs",
      submit_for_review: true,
      submission_information: {
        export_compliance_platform: 'ios',
        export_compliance_compliance_required: false,
        export_compliance_encryption_updated: false,
        export_compliance_uses_encryption: false,
        export_compliance_contains_third_party_cryptography: false,
        export_compliance_contains_proprietary_cryptography: false,
        export_compliance_available_on_french_store: false
      }
    )
  end

  desc "Send Missions to TestFlight."
  lane :release_to_testflight do
    build_for_apple_distribution(configuration: "Beta")
    
    pilot(
      ipa: "./fastlane/apple_build/Missions.ipa",
      skip_waiting_for_build_processing: false,
      changelog: "Version {lane_context[SharedValues: VERSION_NUMBER]}, Build {lane_context[SharedValues: BUILD_NUMBER]}",
      uses_non_exempt_encryption: false
    )
  end

  desc "Build for either TestFlight or AppStore"
  lane :build_for_apple_distribution do |configuration|
    setup_ci
    setup_app_store_connect_api_key
    # precheck
    # create_screenshots
    match_with_options(type: "appstore")
    increment_build_number(build_number: Time.now.to_i)
    gym(
      configuration: configuration[:configuration],
      export_method: "app-store",
      output_directory: "./fastlane/apple_build"
    )
  end

  desc "Update AppStore Privacy Details"
  lane :update_privacy_details do 
    upload_app_privacy_details_to_app_store(
      username: ENV['APPLE_ID'],
      team_name: ENV['APP_STORE_CONNECT_KEY_ID'],
      app_identifier: ENV['APP_IDENTIFIER'],
      json_path: "fastlane/app_privacy_details.json"
    )
  end

  desc "Setup AppStore Connect API Key."
  lane :setup_app_store_connect_api_key do
    app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_KEY_CONTENT']
    )
  end

  desc "Resolve Signing Certificates and Provisioning Profiles."
  lane :match_with_options do |options|
    matchType = options[:type]
    match(type: matchType, readonly: true)
  end

  desc "Create and Frame Screenshots of Missions."
  lane :create_screenshots do
    snapshot
    frameit(path: "./docs", rose_gold: true)
  end

  desc "Unit Test Missions."
  lane :unit_test do
    scan(only_testing: "MissionsTests", configuration: "Debug")
  end

  desc "UI Test Missions."
  lane :ui_test do
    scan(only_testing: "MissionsUITests", configuration: "Debug")
  end
end
